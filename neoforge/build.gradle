plugins {
    id "com.github.johnrengelman.shadow"
    id "com.modrinth.minotaur" version "2.+"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
//    id "java-library"
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

//loom {
//    accessWidenerPath = project(":common").loom.accessWidenerPath
//
//    neoForge {
//        convertAccessWideners = true
//        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
//    }
//}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury-neoforge:$rootProject.architectury_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')

    modCompileOnly("maven.modrinth:rubidium:0.7.1")
    modCompileOnly("maven.modrinth:upgrade-aquatic:6.0.0")
    modCompileOnly("maven.modrinth:blueprint:7.1.0")
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "seamless"
    versionNumber = "${rootProject.mod_version}-forge-1.20.4"
    versionName = "${rootProject.mod_version} Forge 1.20.4"
    versionType = "release"
    uploadFile = remapJar
    gameVersions = ["1.20.2", "1.20.3", "1.20.4"]
    loaders = ["forge"]
    dependencies {
        required.project "architectury-api"
    }
    changelog = rootProject.file("CHANGELOG_LATEST.md").text

    syncBodyFrom = rootProject.file("README.md").text
    tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
}

curseforge {
    project {
        apiKey = System.getenv("CURSEFORGE_TOKEN")
        id = "855593"
        changelog = rootProject.file("CHANGELOG_LATEST.md").text
        changelogType = "markdown"
        releaseType = "release"
        addGameVersion "1.20.2"
        addGameVersion "1.20.3"
        addGameVersion "1.20.4"
        addGameVersion "Forge"

        relations {
            requiredDependency "architectury-api"
        }
        mainArtifact(remapJar) {
            displayName = "${rootProject.mod_version} Forge 1.20.4"
        }
        options {
            javaVersionAutoDetect = false
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/neoforge.mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
    archiveClassifier = "neoforge-${rootProject.latest_version}"
}